name: Workflow Template

on:
  workflow_call:
    inputs:
      test_marker:
        required: false
        type: string
      artifact_name:
        required: true
        type: string

jobs:
  run-tests:
    runs-on: ubuntu-latest
    env:
      BASE_URL: http://localhost:3000
      EXTERNAL_API_URL: https://fakerestapi.azurewebsites.net/api/v1
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fetch Allure history from branch
        run: |
          git fetch origin allure-history:allure-history || true
          git checkout allure-history -- allure-history || true
          mkdir -p reports/allure-report/history
          cp -r allure-history/* reports/allure-report/history/ || true
        continue-on-error: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Flake8 linter
        run: flake8 .

      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xzf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Start json-server
        run: docker compose up -d

      - name: Clean Allure results (keep history)
        run: |
          mkdir -p reports/allure-results/history
          if [ -d reports/allure-report/history ]; then
            cp -r reports/allure-report/history/* reports/allure-results/history || true
          fi
          find reports/allure-results -type f ! -path "reports/allure-results/history/*" -delete || true
          find reports/allure-results -type d -empty -delete || true

      - name: Ensure allure-results exists
        run: mkdir -p reports/allure-results

      - name: Copy Allure categories.json
        run: cp config/categories.json reports/allure-results/categories.json || true

      - name: Wait for json-server
        run: |
          for i in {1..20}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo "json-server is up!"
              break
            fi
            sleep 2
          done

      - name: Run tests
        run: |
          if [ "${{ inputs.test_marker }}" != "" ]; then
            pytest -m "${{ inputs.test_marker }}" --alluredir=reports/allure-results
          else
            pytest --alluredir=reports/allure-results
          fi

      - name: Generate Allure environment.properties
        run: |
          cat <<EOF > reports/allure-results/environment.properties
          ENVIRONMENT=github-ci
          BASE_URL=${BASE_URL}
          EXTERNAL_API_URL=${EXTERNAL_API_URL}
          PYTHON_VERSION=$(python --version 2>&1)
          RUNNER_OS=${RUNNER_OS}
          GITHUB_SHA=${GITHUB_SHA}
          GITHUB_RUN_NUMBER=${GITHUB_RUN_NUMBER}
          EOF

      - name: Generate Allure report
        run: |
          allure generate reports/allure-results --clean -o reports/allure-report

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: reports/allure-report

      - name: Upload Allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: reports/allure-report/history

      - name: Save Allure history to branch
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"
          git fetch origin allure-history:allure-history || true
          git checkout -B allure-history origin/allure-history || git checkout -B allure-history
          mkdir -p allure-history
          cp -r reports/allure-report/history/* allure-history/ || true
          git add allure-history
          git commit -m "Update Allure history [skip ci]" || true
          git pull --rebase origin allure-history || true
          git push origin allure-history
        continue-on-error: true

      - name: Cleanup test books
        run: |
          export PYTHONPATH=.
          python utils/clean_up_test_books.py

      - name: Stop json-server
        if: always()
        run: docker compose down
